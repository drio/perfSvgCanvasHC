// Generated by CoffeeScript 1.10.0
(function() {
  (function() {
    var benchmark, clean, doWork, log, renderLoop, tData;
    log = function(msg, clean) {
      var html, sel;
      if (clean == null) {
        clean = false;
      }
      sel = d3.select("#console");
      if (clean) {
        sel.html("");
      }
      html = sel.html();
      return sel.html(html + msg + "\n");
    };
    clean = function() {
      var node;
      node = document.getElementById("vis");
      return node.innerHTML = '';
    };
    doWork = function(nSeries, size, engine) {
      var data, t0, t1;
      if (nSeries == null) {
        nSeries = 2;
      }
      if (size == null) {
        size = 100;
      }
      if (engine == null) {
        engine = "svg";
      }
      clean();
      data = drd.genData(nSeries, size);
      t0 = performance.now();
      drd.dual(data, engine);
      t1 = performance.now();
      console.log(engine, nSeries, size, t1 - t0);
      return +(t1 - t0).toFixed(2);
    };
    renderLoop = function() {
      return d3.timer(function() {
        return doWork();
      });
    };
    benchmark = function() {
      var engines, ns, sizes, tData;
      ns = [1, 2, 5, 10, 20, 50];
      sizes = [10, 50, 100, 500];
      engines = ["svg", "canvas", "hc"];
      tData = [];
      _.each(engines, function(e, idx) {
        tData.push({
          name: e,
          data: []
        });
        return _.each(sizes, function(s) {
          return _.each(ns, function(num) {
            var nDataPoints, time;
            time = doWork(num, s, e);
            nDataPoints = s * num;
            return tData[idx].data.push([nDataPoints, time]);
          });
        });
      });
      return tData;

      /*
      window.onload = ->
        setTimeout ->
          t = performance.timing
          console.log e, ": ", t.loadEventEnd - t.responseEnd
        , 0
       */
    };
    d3.select("#vis").style("height", drd.height + "px").style("width", drd.width + "px");
    tData = benchmark();
    console.log(tData);
    d3.select("#vis").style("height", "300px").style("width", "1000px");
    return drd.plotResults(tData, "vis");
  })();

}).call(this);
